{
  "name": "Generate typical workflows for given NC scenario",
  "prompts": [
    {
      "id": "bhynrwzio4",
      "prompt": {
        "promptMode": "PROMPT_TEMPLATE_TEXT",
        "promptTemplateInputs": [],
        "structuredPromptExamples": [],
        "textPromptTemplateInputs": [
          {
            "name": "input",
            "datasetColumnName": "nc_scenario",
            "type": "TEXT"
          }
        ],
        "textPromptTemplate": "Le workflow de gestion de non-conformité pour l\u0027A220 respecte les rôles suivants:\n- Quality Controler: en charge du workflow de la non-conformité saisit le rapport de non-conformité initial, et assure la convergence du ticket\n- Design Office: tâche 100 - en charge de l\u0027analyse, le cas échange selon un spécialiste, et des recommandations (proposition d\u0027action corrective). Peut impliquer plusieurs personnes et plusieurs compétences (électrique, mécanique, ... - on parle alors de Design Office Electrical Expert, etc)\n- Design Manager: tâche 200 - manager du Design office, challenge le cas échéant, valide l\u0027analyse les les recommandations (proposition d\u0027action corrective)\n- Stress Office: tâche 300 - en charge des calculs d\u0027ingénierie de structure de l\u0027A220 - analyse l\u0027impact et propose des recommandations complémentaire vis à vis de l\u0027action corrective le cas échéant\n- Stress Manager: tâche 400 - en charge de la validation des calculs de structure - valide les recommandations du stress office le cas échéant\n- Quality Manager: tâche 500 - procède à une recommandation complémentaire le cas échéant, et valide la recommandation (plan d\u0027actions correctives) finale\n\nLes tâches du workflow:\n- Identification de la non-conformité - inscription initiale et description breve par le Quality Controler\n- Rapport de non-conformité: rapport détaillé par le Quality Contoler\n- Tâche 100: analyse initiale de la non conformité par un premier acteur du design office, et demande d\u0027analyses complémentaires le cas échéant au sein du Design office, ou demandes de complément du au Quality controler \n- Tâche 101: analyse technique complémentaire le cas échéant en fonction du problème par un premier expert technique du Design office\n- Tâche 102: analyse complémentaire le cas échéant par un autre acteur si besoin d\u0027une autre compétence\n- Tâche 103: recommandation d\u0027un plan d\u0027action corrective par le Design office\n- Tâche 200 : validation de la recommandation par le Design Manager, le cas échéant retour en tâche 104 etc\n- Tâche 300: selon le plan d\u0027action corrective, calcul du Stress office des impacts de structure et préconisation complémentaire\n- Tâche 301: validation du Stress Manager\n- Tâche 500 : validation finale du plan d\u0027action ou retour en 10x pour cycle suppléementaire\n\nLe traitement du workflow peut dépendre de la qualité de chacun des intervenants, à la fois dans ses compétences techniques et ses compétences rédactionnelles :\n- très compétent, capacité de rédaction synthétique et fluide, peu verbeuse, compréhensible par un ingénieur\n- très compétent, défaut de maîtrise de la langue, utilise des mots ou expression de contournement\n- très compétent, mais trop élusif\n- très compétent, mais ne va pas droit au but (tend à s\u0027arrêter sur des détails inutiles)\n- moyennement compétents, mais bonne capacité communicationnelle\n\nPour un scénario donné:\n {{input}} \n\nDéfinit un workflow correspondant au traitement du sujet, sous la forme d\u0027un json comportant de facon hiérarchique:\n- nc_scenario: reprise integrale du json d\u0027entree¨\n- nc_delay_total: durée totale du workflow, en nombre de jours (correspondant environ à 7 jours au total, 10j maximum)\n- nc_delay_analysis: durée totale, en nombre de jours, selon la compétence et la difficulté du probleme\n- nc_date: date du début de l\u0027observation\n- actors: liste des acteurs impliqués, le cas échéant en ajoutant des acteurs pour le design office en fonction des sous-spécialités. Pour chaque acteur: rôle et type de qualité (compétence et style rédactionnel, cf supra), et un nom/prenom fictif - le tout en anglais\n- workflow_complexity: description de la complexité du workflow, étant donnée a compétence des acteurs, et du problème à résoudre - en anglais\n- workflow_tasks: array liste des étapes selon le workflow ci-dessus, avec pour chaque étape:\n  - la date / heure\n  - la tâche ou sous-tâche parmi les tâches listées ci-dessus (libellé en anglais)\n  - rôle en charge (Quality Controler, Design Office,  Design Office selon l\u0027expertise mobilisée, ...) - en anglais\n   - l\u0027acteur (nom prenom selon la liste supra)\n  - aleas: genere un element de contexte précisant l\u0027état de comprehension du probleme étant donné l\u0027historique (et qualité de description et compétence des acteurs) - en anglais\n\nToutes les metadonnees et données textuelles doivent être en anglais, et on ne doit pas avoir de ```json en formattage.\n\nSeul le json doit être renvoyé, sans formattage ni quotes ```json",
        "textPromptSystemTemplate": "",
        "resultValidation": {
          "expectedFormat": "JSON_OBJECT",
          "requiredJSONObjectKeys": [],
          "forbiddenTerms": []
        },
        "promptTemplateQueriesSource": "DATASET"
      },
      "llmId": "openai:OpenAI-FA:gpt-4o",
      "containerSelection": {
        "containerMode": "INHERIT"
      },
      "llmSettings": {
        "stopSequences": []
      },
      "dataset": "NC_types_random",
      "nbRows": 1,
      "inlinePromptTemplateQueries": [],
      "tags": [],
      "starred": false
    }
  ],
  "creationTag": {
    "versionNumber": 0,
    "lastModifiedBy": {
      "login": "fabien.antoine@cgi.com"
    },
    "lastModifiedOn": 1734889599010
  },
  "tags": [],
  "customFields": {},
  "checklists": {
    "checklists": []
  }
}